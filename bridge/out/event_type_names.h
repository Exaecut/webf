// Generated from template:
//   code_generator/src/json/templates/make_names.h.tmpl
// and input files:
//   E:\Projects\Exaecut\sources\webf\bridge\core\events\event_type_names.json5
#ifndef EVENT_TYPE_NAMES_H_
#define EVENT_TYPE_NAMES_H_
#include "bindings/qjs/atomic_string.h"
namespace webf {
namespace event_type_names {
  extern thread_local const AtomicString& kDOMActivate;
  extern thread_local const AtomicString& kDOMCharacterDataModified;
  extern thread_local const AtomicString& kDOMContentLoaded;
  extern thread_local const AtomicString& kDOMFocusIn;
  extern thread_local const AtomicString& kDOMFocusOut;
  extern thread_local const AtomicString& kDOMNodeInserted;
  extern thread_local const AtomicString& kDOMNodeInsertedIntoDocument;
  extern thread_local const AtomicString& kDOMNodeRemoved;
  extern thread_local const AtomicString& kDOMNodeRemovedFromDocument;
  extern thread_local const AtomicString& kDOMSubtreeModified;
  extern thread_local const AtomicString& kabort;
  extern thread_local const AtomicString& kabortpayment;
  extern thread_local const AtomicString& kactivate;
  extern thread_local const AtomicString& kactive;
  extern thread_local const AtomicString& kaddsourcebuffer;
  extern thread_local const AtomicString& kaddtrack;
  extern thread_local const AtomicString& kanimationcancel;
  extern thread_local const AtomicString& kanimationend;
  extern thread_local const AtomicString& kanimationiteration;
  extern thread_local const AtomicString& kanimationstart;
  extern thread_local const AtomicString& kbackgroundfetchabort;
  extern thread_local const AtomicString& kbackgroundfetchclick;
  extern thread_local const AtomicString& kbackgroundfetchfail;
  extern thread_local const AtomicString& kbackgroundfetchsuccess;
  extern thread_local const AtomicString& kbeforeunload;
  extern thread_local const AtomicString& kbeginEvent;
  extern thread_local const AtomicString& kblocked;
  extern thread_local const AtomicString& kblur;
  extern thread_local const AtomicString& kboundary;
  extern thread_local const AtomicString& kcached;
  extern thread_local const AtomicString& kcancel;
  extern thread_local const AtomicString& kcanplay;
  extern thread_local const AtomicString& kcanplaythrough;
  extern thread_local const AtomicString& kcapturehandlechange;
  extern thread_local const AtomicString& kchange;
  extern thread_local const AtomicString& kchecking;
  extern thread_local const AtomicString& kclick;
  extern thread_local const AtomicString& kdbclick;
  extern thread_local const AtomicString& klongpress;
  extern thread_local const AtomicString& kclose;
  extern thread_local const AtomicString& kclosing;
  extern thread_local const AtomicString& kcomplete;
  extern thread_local const AtomicString& kgotpointercapture;
  extern thread_local const AtomicString& kcompositionend;
  extern thread_local const AtomicString& kcompositionstart;
  extern thread_local const AtomicString& kcompositionupdate;
  extern thread_local const AtomicString& kconnect;
  extern thread_local const AtomicString& kcontextlost;
  extern thread_local const AtomicString& kcontextmenu;
  extern thread_local const AtomicString& kcontextrestored;
  extern thread_local const AtomicString& kcontrollerchange;
  extern thread_local const AtomicString& kcookiechange;
  extern thread_local const AtomicString& kcopy;
  extern thread_local const AtomicString& kcontentdelete;
  extern thread_local const AtomicString& kcrossoriginmessage;
  extern thread_local const AtomicString& kcurrentscreenchange;
  extern thread_local const AtomicString& kcuechange;
  extern thread_local const AtomicString& kcurrententrychange;
  extern thread_local const AtomicString& kcut;
  extern thread_local const AtomicString& kdatachannel;
  extern thread_local const AtomicString& kdblclick;
  extern thread_local const AtomicString& kdefaultsessionstart;
  extern thread_local const AtomicString& kdisconnect;
  extern thread_local const AtomicString& kdisplay;
  extern thread_local const AtomicString& kdrop;
  extern thread_local const AtomicString& kdurationchange;
  extern thread_local const AtomicString& kemptied;
  extern thread_local const AtomicString& kencrypted;
  extern thread_local const AtomicString& kend;
  extern thread_local const AtomicString& kended;
  extern thread_local const AtomicString& kendEvent;
  extern thread_local const AtomicString& kenter;
  extern thread_local const AtomicString& kerror;
  extern thread_local const AtomicString& kexit;
  extern thread_local const AtomicString& kfetch;
  extern thread_local const AtomicString& kfinish;
  extern thread_local const AtomicString& kfocus;
  extern thread_local const AtomicString& kfocusin;
  extern thread_local const AtomicString& kfocusout;
  extern thread_local const AtomicString& kfreeze;
  extern thread_local const AtomicString& kfullscreenchange;
  extern thread_local const AtomicString& kfullscreenerror;
  extern thread_local const AtomicString& khashchange;
  extern thread_local const AtomicString& khide;
  extern thread_local const AtomicString& kinactive;
  extern thread_local const AtomicString& kinput;
  extern thread_local const AtomicString& kinputreport;
  extern thread_local const AtomicString& kinputsourceschange;
  extern thread_local const AtomicString& kinstall;
  extern thread_local const AtomicString& kinterfacerequest;
  extern thread_local const AtomicString& kinvalid;
  extern thread_local const AtomicString& kkeydown;
  extern thread_local const AtomicString& kkeypress;
  extern thread_local const AtomicString& kkeystatuseschange;
  extern thread_local const AtomicString& kkeyup;
  extern thread_local const AtomicString& klanguagechange;
  extern thread_local const AtomicString& kleavepictureinpicture;
  extern thread_local const AtomicString& klevelchange;
  extern thread_local const AtomicString& kload;
  extern thread_local const AtomicString& kloadeddata;
  extern thread_local const AtomicString& kloadedmetadata;
  extern thread_local const AtomicString& kloadend;
  extern thread_local const AtomicString& kloading;
  extern thread_local const AtomicString& kloadstart;
  extern thread_local const AtomicString& klostpointercapture;
  extern thread_local const AtomicString& kmark;
  extern thread_local const AtomicString& kmessage;
  extern thread_local const AtomicString& kmessageerror;
  extern thread_local const AtomicString& kmousedown;
  extern thread_local const AtomicString& kmouseenter;
  extern thread_local const AtomicString& kmouseleave;
  extern thread_local const AtomicString& kmousemove;
  extern thread_local const AtomicString& kmouseout;
  extern thread_local const AtomicString& kmouseover;
  extern thread_local const AtomicString& kmouseup;
  extern thread_local const AtomicString& kmousewheel;
  extern thread_local const AtomicString& kmute;
  extern thread_local const AtomicString& knavigate;
  extern thread_local const AtomicString& knavigateerror;
  extern thread_local const AtomicString& knavigatesuccess;
  extern thread_local const AtomicString& knoupdate;
  extern thread_local const AtomicString& kopen;
  extern thread_local const AtomicString& korientationchange;
  extern thread_local const AtomicString& koverscroll;
  extern thread_local const AtomicString& kpagehide;
  extern thread_local const AtomicString& kpageshow;
  extern thread_local const AtomicString& kpaste;
  extern thread_local const AtomicString& kpause;
  extern thread_local const AtomicString& kplay;
  extern thread_local const AtomicString& kplaying;
  extern thread_local const AtomicString& kpointercancel;
  extern thread_local const AtomicString& kpointerdown;
  extern thread_local const AtomicString& kpointerenter;
  extern thread_local const AtomicString& kpointerleave;
  extern thread_local const AtomicString& kpointerlockchange;
  extern thread_local const AtomicString& kpointerlockerror;
  extern thread_local const AtomicString& kpointermove;
  extern thread_local const AtomicString& kpointerout;
  extern thread_local const AtomicString& kpointerover;
  extern thread_local const AtomicString& kpointerup;
  extern thread_local const AtomicString& kgesturestart;
  extern thread_local const AtomicString& kgesturechange;
  extern thread_local const AtomicString& kgestureend;
  extern thread_local const AtomicString& kpopstate;
  extern thread_local const AtomicString& kprogress;
  extern thread_local const AtomicString& kprocessorerror;
  extern thread_local const AtomicString& kpush;
  extern thread_local const AtomicString& kpushsubscriptionchange;
  extern thread_local const AtomicString& kratechange;
  extern thread_local const AtomicString& kreading;
  extern thread_local const AtomicString& kreadingerror;
  extern thread_local const AtomicString& kreadystatechange;
  extern thread_local const AtomicString& kreflectionchange;
  extern thread_local const AtomicString& krejectionhandled;
  extern thread_local const AtomicString& krelease;
  extern thread_local const AtomicString& kremove;
  extern thread_local const AtomicString& kremovestream;
  extern thread_local const AtomicString& kremovetrack;
  extern thread_local const AtomicString& krepeatEvent;
  extern thread_local const AtomicString& kreset;
  extern thread_local const AtomicString& kresize;
  extern thread_local const AtomicString& kresult;
  extern thread_local const AtomicString& kresume;
  extern thread_local const AtomicString& kscreenschange;
  extern thread_local const AtomicString& kscroll;
  extern thread_local const AtomicString& kscrollend;
  extern thread_local const AtomicString& ksearch;
  extern thread_local const AtomicString& kseeked;
  extern thread_local const AtomicString& kseeking;
  extern thread_local const AtomicString& kselect;
  extern thread_local const AtomicString& kselectionchange;
  extern thread_local const AtomicString& kselectstart;
  extern thread_local const AtomicString& kshow;
  extern thread_local const AtomicString& ksqueeze;
  extern thread_local const AtomicString& ksqueezeend;
  extern thread_local const AtomicString& ksqueezestart;
  extern thread_local const AtomicString& kstalled;
  extern thread_local const AtomicString& kstart;
  extern thread_local const AtomicString& kstop;
  extern thread_local const AtomicString& kstatechange;
  extern thread_local const AtomicString& kstorage;
  extern thread_local const AtomicString& ksubmit;
  extern thread_local const AtomicString& ksuccess;
  extern thread_local const AtomicString& ksuspend;
  extern thread_local const AtomicString& ksync;
  extern thread_local const AtomicString& kterminate;
  extern thread_local const AtomicString& ktextInput;
  extern thread_local const AtomicString& ktextupdate;
  extern thread_local const AtomicString& ktextformatupdate;
  extern thread_local const AtomicString& ktoggle;
  extern thread_local const AtomicString& ktonechange;
  extern thread_local const AtomicString& ktouchcancel;
  extern thread_local const AtomicString& ktouchend;
  extern thread_local const AtomicString& ktouchmove;
  extern thread_local const AtomicString& ktouchstart;
  extern thread_local const AtomicString& ktransitioncancel;
  extern thread_local const AtomicString& ktransitionend;
  extern thread_local const AtomicString& ktransitionrun;
  extern thread_local const AtomicString& ktransitionstart;
  extern thread_local const AtomicString& ktypechange;
  extern thread_local const AtomicString& kuncapturederror;
  extern thread_local const AtomicString& kunhandledrejection;
  extern thread_local const AtomicString& kunload;
  extern thread_local const AtomicString& kunmute;
  extern thread_local const AtomicString& kupdate;
  extern thread_local const AtomicString& kversionchange;
  extern thread_local const AtomicString& kvisibilitychange;
  extern thread_local const AtomicString& kwaiting;
  extern thread_local const AtomicString& kwaitingforkey;
  extern thread_local const AtomicString& kwebglcontextcreationerror;
  extern thread_local const AtomicString& kwebglcontextlost;
  extern thread_local const AtomicString& kwebglcontextrestored;
  extern thread_local const AtomicString& kwheel;
  extern thread_local const AtomicString& kzoom;
  extern thread_local const AtomicString& kintersectionchange;
  extern thread_local const AtomicString& kgcopen;
  extern thread_local const AtomicString& khybridrouterchange;
constexpr unsigned kNamesCount = 217;
void Init(JSContext* ctx);
void Dispose();
}
} // webf
#endif  // #define EVENT_TYPE_NAMES