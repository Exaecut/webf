// Generated from template:
//   code_generator/src/json/templates/make_names.h.tmpl
// and input files:
//   E:\Projects\Exaecut\sources\webf\bridge\core\built_in_string.json5
#ifndef BUILT_IN_STRING_H_
#define BUILT_IN_STRING_H_
#include "bindings/qjs/atomic_string.h"
namespace webf {
namespace built_in_string {
  extern thread_local const AtomicString& kNULL;
  extern thread_local const AtomicString& knull;
  extern thread_local const AtomicString& kfalse;
  extern thread_local const AtomicString& ktrue;
  extern thread_local const AtomicString& kif;
  extern thread_local const AtomicString& kelse;
  extern thread_local const AtomicString& kreturn;
  extern thread_local const AtomicString& kvar;
  extern thread_local const AtomicString& kthis;
  extern thread_local const AtomicString& kdelete;
  extern thread_local const AtomicString& kvoid;
  extern thread_local const AtomicString& ktypeof;
  extern thread_local const AtomicString& knew;
  extern thread_local const AtomicString& kin;
  extern thread_local const AtomicString& kinstanceof;
  extern thread_local const AtomicString& kdo;
  extern thread_local const AtomicString& kwhile;
  extern thread_local const AtomicString& kfor;
  extern thread_local const AtomicString& kbreak;
  extern thread_local const AtomicString& kcontinue;
  extern thread_local const AtomicString& kswitch;
  extern thread_local const AtomicString& kcase;
  extern thread_local const AtomicString& kdefault;
  extern thread_local const AtomicString& kthrow;
  extern thread_local const AtomicString& ktry;
  extern thread_local const AtomicString& kcatch;
  extern thread_local const AtomicString& kfinally;
  extern thread_local const AtomicString& kfunction;
  extern thread_local const AtomicString& kdebugger;
  extern thread_local const AtomicString& kwith;
  extern thread_local const AtomicString& kclass;
  extern thread_local const AtomicString& kconst;
  extern thread_local const AtomicString& kenum;
  extern thread_local const AtomicString& kexport;
  extern thread_local const AtomicString& kextends;
  extern thread_local const AtomicString& kimport;
  extern thread_local const AtomicString& ksuper;
  extern thread_local const AtomicString& kimplements;
  extern thread_local const AtomicString& kinterface;
  extern thread_local const AtomicString& klet;
  extern thread_local const AtomicString& kpackage;
  extern thread_local const AtomicString& kprivate;
  extern thread_local const AtomicString& kprotected;
  extern thread_local const AtomicString& kpublic;
  extern thread_local const AtomicString& kstatic;
  extern thread_local const AtomicString& kyield;
  extern thread_local const AtomicString& kawait;
  extern thread_local const AtomicString& kempty_string;
  extern thread_local const AtomicString& klength;
  extern thread_local const AtomicString& kfileName;
  extern thread_local const AtomicString& klineNumber;
  extern thread_local const AtomicString& kmessage;
  extern thread_local const AtomicString& kerrors;
  extern thread_local const AtomicString& kstack;
  extern thread_local const AtomicString& kname;
  extern thread_local const AtomicString& ktoString;
  extern thread_local const AtomicString& ktoLocaleString;
  extern thread_local const AtomicString& kvalueOf;
  extern thread_local const AtomicString& keval;
  extern thread_local const AtomicString& kprototype;
  extern thread_local const AtomicString& kconstructor;
  extern thread_local const AtomicString& kconfigurable;
  extern thread_local const AtomicString& kwritable;
  extern thread_local const AtomicString& kenumerable;
  extern thread_local const AtomicString& kvalue;
  extern thread_local const AtomicString& kget;
  extern thread_local const AtomicString& kset;
  extern thread_local const AtomicString& kof;
  extern thread_local const AtomicString& k__proto__;
  extern thread_local const AtomicString& kundefined;
  extern thread_local const AtomicString& knumber;
  extern thread_local const AtomicString& kboolean;
  extern thread_local const AtomicString& kstring;
  extern thread_local const AtomicString& kobject;
  extern thread_local const AtomicString& ksymbol;
  extern thread_local const AtomicString& kinteger;
  extern thread_local const AtomicString& kunknown;
  extern thread_local const AtomicString& karguments;
  extern thread_local const AtomicString& kcallee;
  extern thread_local const AtomicString& kcaller;
  extern thread_local const AtomicString& k_eval_;
  extern thread_local const AtomicString& k_ret_;
  extern thread_local const AtomicString& k_var_;
  extern thread_local const AtomicString& k_arg_var_;
  extern thread_local const AtomicString& k_with_;
  extern thread_local const AtomicString& klastIndex;
  extern thread_local const AtomicString& ktarget;
  extern thread_local const AtomicString& kindex;
  extern thread_local const AtomicString& kinput;
  extern thread_local const AtomicString& kdefineProperties;
  extern thread_local const AtomicString& kapply;
  extern thread_local const AtomicString& kjoin;
  extern thread_local const AtomicString& kconcat;
  extern thread_local const AtomicString& ksplit;
  extern thread_local const AtomicString& kconstruct;
  extern thread_local const AtomicString& kgetPrototypeOf;
  extern thread_local const AtomicString& ksetPrototypeOf;
  extern thread_local const AtomicString& kisExtensible;
  extern thread_local const AtomicString& kpreventExtensions;
  extern thread_local const AtomicString& khas;
  extern thread_local const AtomicString& kdeleteProperty;
  extern thread_local const AtomicString& kdefineProperty;
  extern thread_local const AtomicString& kgetOwnPropertyDescriptor;
  extern thread_local const AtomicString& kownKeys;
  extern thread_local const AtomicString& kadd;
  extern thread_local const AtomicString& kdone;
  extern thread_local const AtomicString& knext;
  extern thread_local const AtomicString& kvalues;
  extern thread_local const AtomicString& ksource;
  extern thread_local const AtomicString& kflags;
  extern thread_local const AtomicString& kglobal;
  extern thread_local const AtomicString& kunicode;
  extern thread_local const AtomicString& kraw;
  extern thread_local const AtomicString& knew_target;
  extern thread_local const AtomicString& kthis_active_func;
  extern thread_local const AtomicString& khome_object;
  extern thread_local const AtomicString& kcomputed_field;
  extern thread_local const AtomicString& kstatic_computed_field;
  extern thread_local const AtomicString& kclass_fields_init;
  extern thread_local const AtomicString& kbrand;
  extern thread_local const AtomicString& khash_constructor;
  extern thread_local const AtomicString& kas;
  extern thread_local const AtomicString& kfrom;
  extern thread_local const AtomicString& kmeta;
  extern thread_local const AtomicString& k_default_;
  extern thread_local const AtomicString& k_star_;
  extern thread_local const AtomicString& kModule;
  extern thread_local const AtomicString& kthen;
  extern thread_local const AtomicString& kresolve;
  extern thread_local const AtomicString& kreject;
  extern thread_local const AtomicString& kpromise;
  extern thread_local const AtomicString& kproxy;
  extern thread_local const AtomicString& krevoke;
  extern thread_local const AtomicString& kasync;
  extern thread_local const AtomicString& kexec;
  extern thread_local const AtomicString& kgroups;
  extern thread_local const AtomicString& kstatus;
  extern thread_local const AtomicString& kreason;
  extern thread_local const AtomicString& kglobalThis;
  extern thread_local const AtomicString& knot_equal;
  extern thread_local const AtomicString& ktimed_out;
  extern thread_local const AtomicString& kok;
  extern thread_local const AtomicString& ktoJSON;
  extern thread_local const AtomicString& kObject;
  extern thread_local const AtomicString& kArray;
  extern thread_local const AtomicString& kError;
  extern thread_local const AtomicString& kNumber;
  extern thread_local const AtomicString& kString;
  extern thread_local const AtomicString& kBoolean;
  extern thread_local const AtomicString& kSymbol;
  extern thread_local const AtomicString& kArguments;
  extern thread_local const AtomicString& kMath;
  extern thread_local const AtomicString& kJSON;
  extern thread_local const AtomicString& kDate;
  extern thread_local const AtomicString& kFunction;
  extern thread_local const AtomicString& kGeneratorFunction;
  extern thread_local const AtomicString& kForInIterator;
  extern thread_local const AtomicString& kRegExp;
  extern thread_local const AtomicString& kArrayBuffer;
  extern thread_local const AtomicString& kSharedArrayBuffer;
  extern thread_local const AtomicString& kUint8ClampedArray;
  extern thread_local const AtomicString& kInt8Array;
  extern thread_local const AtomicString& kUint8Array;
  extern thread_local const AtomicString& kInt16Array;
  extern thread_local const AtomicString& kUint16Array;
  extern thread_local const AtomicString& kInt32Array;
  extern thread_local const AtomicString& kUint32Array;
  extern thread_local const AtomicString& kFloat32Array;
  extern thread_local const AtomicString& kFloat64Array;
  extern thread_local const AtomicString& kDataView;
  extern thread_local const AtomicString& kMap;
  extern thread_local const AtomicString& kSet;
  extern thread_local const AtomicString& kWeakMap;
  extern thread_local const AtomicString& kWeakSet;
  extern thread_local const AtomicString& kMap_Iterator;
  extern thread_local const AtomicString& kSet_Iterator;
  extern thread_local const AtomicString& kArray_Iterator;
  extern thread_local const AtomicString& kString_Iterator;
  extern thread_local const AtomicString& kRegExp_String_Iterator;
  extern thread_local const AtomicString& kGenerator;
  extern thread_local const AtomicString& kProxy;
  extern thread_local const AtomicString& kPromise;
  extern thread_local const AtomicString& kPromiseResolveFunction;
  extern thread_local const AtomicString& kPromiseRejectFunction;
  extern thread_local const AtomicString& kAsyncFunction;
  extern thread_local const AtomicString& kAsyncFunctionResolve;
  extern thread_local const AtomicString& kAsyncFunctionReject;
  extern thread_local const AtomicString& kAsyncGeneratorFunction;
  extern thread_local const AtomicString& kAsyncGenerator;
  extern thread_local const AtomicString& kEvalError;
  extern thread_local const AtomicString& kRangeError;
  extern thread_local const AtomicString& kReferenceError;
  extern thread_local const AtomicString& kSyntaxError;
  extern thread_local const AtomicString& kTypeError;
  extern thread_local const AtomicString& kURIError;
  extern thread_local const AtomicString& kInternalError;
  extern thread_local const AtomicString& kPrivate_brand;
  extern thread_local const AtomicString& kSymbol_toPrimitive;
  extern thread_local const AtomicString& kSymbol_iterator;
  extern thread_local const AtomicString& kSymbol_match;
  extern thread_local const AtomicString& kSymbol_matchAll;
  extern thread_local const AtomicString& kSymbol_replace;
  extern thread_local const AtomicString& kSymbol_search;
  extern thread_local const AtomicString& kSymbol_split;
  extern thread_local const AtomicString& kSymbol_toStringTag;
  extern thread_local const AtomicString& kSymbol_isConcatSpreadable;
  extern thread_local const AtomicString& kSymbol_hasInstance;
  extern thread_local const AtomicString& kSymbol_species;
  extern thread_local const AtomicString& kSymbol_unscopables;
  extern thread_local const AtomicString& kSymbol_asyncIterator;
constexpr unsigned kNamesCount = 210;
void Init(JSContext* ctx);
void Dispose();
}
} // webf
#endif  // #define BUILT_IN_STRING